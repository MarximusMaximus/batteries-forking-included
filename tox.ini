[tox]
envlist = lint,py{38,39,310},coverage
isolated_build = True
requires =
    poetry>=1.2.0
    # tox-poetry-installer

[baseenv]
require_locked_deps = true
install_dev_deps = true
allowlist_externals =
    /usr/bin/file
    C:\Program Files\Git\usr\bin\file.EXE
    pytest
    pre-commit
    poetry
commands =
    file "{envpython}"
    "{envpython}" --version
    poetry --version
    poetry install --no-root

[testenv]
passenv = *
require_locked_deps = true
install_dev_deps = true
allowlist_externals =
    {[baseenv]allowlist_externals}
commands =
    {[baseenv]commands}
    pytest -c tox.ini --html=.reports/{envname}/test-report.html --junit-xml=.reports/{envname}/junit.xml {posargs}

[testenv:lint]
passenv = *
require_locked_deps = true
install_dev_deps = true
allowlist_externals =
    {[baseenv]allowlist_externals}
commands =
    {[baseenv]commands}
    pre-commit run --color=always --verbose --all-files {posargs}

[testenv:coverage]
# NOTE: does not use the pytest settings from tox.ini, uses pyproject.toml
# use poetry to install in dev mode instead of tox's usedevelop
# usedevelop = true
passenv = *
require_locked_deps = true
install_dev_deps = true
allowlist_externals =
    {[baseenv]allowlist_externals}
commands =
    {[baseenv]commands}
    poetry install --only-root
    pytest {posargs}
    coverage lcov

# these options are used when running for all tox envs that runs pytest
#   EXCEPT 'coverage', which uses the settings from pyproject.toml
[pytest]
minversion = 7.1
# make XPASS ("unexpectedly passing") result to fail the test suite
xfail_strict = true
addopts =
    # report the reasons for all tests that skipped, xfailed, xpassed, etc EXCEPT passed/Passed w/ Output
    -ra
    # colorize
    --force-sugar
    --color=yes
    # HACK: temporarily disable doctests until PytestShellTestHarness is
    #   extracted to it's own project
    # # execute doctests directly from docstrings of your classes and functions
    # --doctest-modules
    # --doctest-continue-on-failure
    # show complete traceback
    --tb=long
    # show local variable values in traceback
    --showlocals
    # raise errors if using an unregistered marker
    --strict-markers
    # raise errors if the config is bad
    --strict-config
    # let's adopt the future mode already
    --import-mode=importlib
    # NOTE: this is actually set in the env definition, so that we get the
    #   envnam properly
    # # generate report based upon tox env name
    # "--html=.reports/test-report-{envname}.html",
    # html report should be single file
    --self-contained-html
    # parallelize tests across available cpu cores
    -n=auto
filterwarnings =
    error
log_cli_level = debug
testpaths = .
pythonpath = .
