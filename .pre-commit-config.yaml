repos:

  # - repo: local
  #   hooks:
  #   - id: echo-files
  #     name: echo-files
  #     entry: echo
  #     language: system
  #     types_or: [python, pyi]
  #     args: []
  #     require_serial: true
  #     additional_dependencies: []

  - repo: https://github.com/asottile/add-trailing-comma
    rev: v2.2.3
    hooks:
    - id: add-trailing-comma
      args: ["--py36-plus"]

  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: "v1.3.0"
    hooks:
      - id: remove-crlf
      - id: forbid-crlf
      - id: remove-tabs
        args: [ '--whitespaces-count', '4' ]
      - id: forbid-tabs

  - repo: local
    hooks:
      - id: replace-unicode-non-breaking-spaces
        name: replace unicode non-breaking space character U+00A0 aka M-BM-
        language: system
        entry: perl -pi* -e 's/\xc2\xa0/ /g && ($t = 1) && print STDERR $_; END{{exit
            $t}}'
        files: ''
      - id: forbid-unicode-non-breaking-spaces
        name: Detect unicode non-breaking space character U+00A0 aka M-BM-
        language: system
        entry: perl -ne 'print if $m = /\xc2\xa0/; $t ||= $m; END{{exit $t}}'
        files: ''
      - id: replace-en-dashes
        name: replace the EXTREMELY confusing unicode character U+2013
        language: system
        entry: perl -pi* -e 's/\xe2\x80\x93/-/g && ($t = 1) && print STDERR $_; END{{exit
            $t}}'
        files: ''
      - id: forbid-en-dashes
        name: Detect the EXTREMELY confusing unicode character U+2013
        language: system
        entry: perl -ne 'print if $m = /\xe2\x80\x93/; $t ||= $m; END{{exit $t}}'
        files: ''

  # TODO: #8 (add additional linter? isort)
  # - repo: https://github.com/pycqa/isort
  #   rev: "5.10.1"
  #   hooks:
  #     - id: isort
  #       name: isort (python)
  #     - id: isort
  #       name: isort (cython)
  #       types: [cython]
  #     - id: isort
  #       name: isort (pyi)
  #       types: [pyi]

  # - repo: https://github.com/python-poetry/poetry
  #   rev: '1.2.0b3'
  #   hooks:
  #     - id: poetry-check
      # - id: poetry-lock

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: "v1.3.0"
    hooks:
    - id: python-safety-dependencies-check
      files: ^pyproject\.toml
      additional_dependencies: [safety<2]

  - repo: local
    hooks:
    - id: flake8
      name: flake8
      description: '`flake8` is a command-line utility for enforcing style consistency across Python projects.'
      entry: flake8
      language: python
      types: [python]
      pass_filenames: false
      require_serial: true
      args: []
      additional_dependencies: []

  - repo: local
    hooks:
    - id: vulture
      name: vulture
      language: python
      entry: vulture
      description: Find unused Python code.
      types: [python]
      pass_filenames: false
      require_serial: true

  - repo: local
    hooks:
    - id: pylint
      name: pylint
      entry: pylint --verbose
      language: python
      types: [python]
      require_serial: true
      args: []
      additional_dependencies: []

  - repo: local
    hooks:
    - id: pyright
      name: pyright
      entry: pyright
      language: node
      types: [ python ]
      pass_filenames: false

  - repo: local
    hooks:
    - id: mypy
      name: mypy
      entry: mypy --config-file pyproject.toml
      language: python
      types_or: [python, pyi]
      args: []
      require_serial: true
      additional_dependencies: []

  - repo: https://github.com/PyCQA/bandit
    rev: "1.7.4"
    hooks:
      - id: bandit
        name: bandit-src
        pass_filenames: false
        args: [
            "--recursive",
            "src",
        ]
      - id: bandit
        name: bandit-tests
        pass_filenames: false
        args: [
            "--recursive",
            "tests",
            "--skip=B101,B603,B404",
        ]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v4.3.0"
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-toml
      - id: check-yaml
        types: [file]
        files: ^.*\.ya?ml$
      - id: check-xml
      - id: destroyed-symlinks
      - id: detect-private-key
      - id: forbid-new-submodules
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: check-vcs-permalinks
      - id: check-symlinks
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-case-conflict
      - id: check-ast
      - id: check-added-large-files

  - repo: local
    hooks:
      - id: rst
        name: rst
        entry: rst-lint
        files: ^.*\.rst$
        language: python
        args: ["--encoding=utf-8"]
        additional_dependencies: [pygments, restructuredtext_lint]

  - repo: https://github.com/Lucas-C/pre-commit-hooks-markup
    rev: "v1.0.1"
    hooks:
    - id: rst-linter

  - repo: https://gitlab.com/bmares/check-json5
    rev: "v1.0.0"
    hooks:
    - id: check-json5
      types: [file]
      files: ^.*\.json[c5]?$

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: "0.17.1"
    hooks:
      - id: check-renovate
        additional_dependencies: ['pyjson5']

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: "v1.9.0"
    hooks:
    - id: python-use-type-annotations
    - id: python-check-blanket-noqa
    - id: python-check-blanket-type-ignore
    - id: python-check-mock-methods
    - id: python-no-eval
    - id: python-no-log-warn
    - id: rst-backticks
    - id: rst-directive-colons
    - id: rst-inline-touching-normal
    - id: text-unicode-replacement-char

  # - repo: https://github.com/JohnnyMorganz/StyLua
  #   rev: "v0.13.1"
  #   hooks:
  #     - id: stylua # or stylua-system / stylua-github
  ## alternative? https://github.com/Koihik/LuaFormatter

  - repo: https://github.com/Calinou/pre-commit-luacheck
    rev: "v1.0.0"
    hooks:
      - id: luacheck

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: "v0.8.0.4"
    hooks:
      - id: shellcheck

  - repo: local
    hooks:
      - id: check-dash-syntax
        name: Check Shell scripts syntax correctness
        language: system
        entry: bash --posix -n
        files: ^.*\.sh$

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: "v0.32.1"
    hooks:
      - id: markdownlint

  - repo: https://github.com/thibaudcolas/curlylint
    rev: "v0.13.1"
    hooks:
      - id: curlylint

  - repo: https://github.com/cheshirekow/cmake-format-precommit
    rev: "v0.6.13"
    hooks:
      - id: cmake-format
      - id: cmake-lint
  - repo: https://github.com/cmake-lint/cmake-lint
    rev: "1.4.2"
    hooks:
      - id: cmakelint

  - repo: https://github.com/awebdeveloper/pre-commit-tslint
    # latest master as of 2022-04-25, commit date 2020-06-05
    rev: "0.0.2"
    hooks:
      - id: tslint
        args: ['--project','tsconfig.json','--type-check']
        additional_dependencies: ['tslint@5.0.0']
        # additional_dependencies: ['tslint@5.0.0', 'tslint-eslint-rules']

  - repo: https://github.com/noahsark769/xcodeproj-sort-pre-commit-hook
    rev: "v1.1.1"
    hooks:
    - id: xcodeproj-sort
      args: [--groups-position=above]

  - repo: https://github.com/jorisroovers/gitlint
    rev: "v0.17.0"
    hooks:
      - id: gitlint

  - repo: local
    hooks:
      - id: force-JsonSlurperClassic
        name: Ensure JsonSlurperClassic is used instead of non-serializable JsonSlurper
        language: pygrep
        entry: JsonSlurper[^C]
        files: \.groovy$

  # - repo: local
  #   env:
  #     JENKINS_URL:
  #   hooks:
  #       - id: Jenkinsfile-linter
  #         name: Check Jenkinsfile following the scripted-pipeline syntax using Jenkins API
  #         files: Jenkinsfile
  #         language: system
  #         entry: sh -c '! curl --silent $JENKINS_URL/job/MyPipelineName/job/master/1/replay/checkScriptCompile --user $JENKINS_USER:$JENKINS_TOKEN --data-urlencode value@Jenkinsfile | grep -F "\"status\":\"fail\""'

  - repo: local
    hooks:
      - id: css-forbid-px
        name: In CSS files, use rem or % over px
        language: pygrep
        entry: px
        files: \.css$
      # - id: ot-sanitize-fonts
      #   name: Calling ot-sanitise on otf/ttf/woff/woff2 font files
      #   language: system
      #   entry: sh -c 'type ot-sanitise >/dev/null && for font in "$@"; do echo "$font"; ot-sanitise "$font"; done || echo "WARNING Command ot-sanitise not found - skipping check"'
      #   files: \.(otf|ttf|woff|woff2)$

# -   repo: local
#     hooks:
#     -   id: angular-forbid-apply
#         name: In AngularJS, use $digest over $apply
#         language: pygrep
#         entry: \$apply
#         files: \.js$
#     -   id: angular-forbid-ngrepeat-without-trackby
#         name: In AngularJS, ALWAYS use 'track by' with ng-repeat
#         language: pygrep
#         entry: ng-repeat(?!.*track by)
#         files: \.html$
#     -   id: angular-forbid-ngmodel-with-no-dot
#         name: In AngularJS, "Whenever you have ng-model there's gotta be a dot in
#             there somewhere"
#         language: pygrep
#         entry: ng-model="?[^.]+[" ]
#         files: \.html$
